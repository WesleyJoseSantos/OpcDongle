<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Gerdau | Laminação 2</title>
    <style>
      * {
        margin: 0;
        padding: 0;
        outline: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      }
      body {
        width: 100%;
        height: 100vh;
        padding-top: 30px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
      }
      .container {
        max-width: 420px;
        width: 100%;
        padding: 20px 15px;
        background: #1e1e1e;
        border: 1px solid #999;
        border-radius: 6px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-around;
      }
      .title {
        text-align: center;
        color: #f5f5f5;
      }
      .subtitle {
        margin-top: 20px;
        color: #f5f5f5;
      }
      header.title span {
        font-size: 3em;
      }
      .container form {
        width: 100%;
        margin-top: 10px;
      }
      .container select {
        width: 100%;
        height: 23px;
      }
      .input {
        width: 100%;
        height: 33px;
        margin-bottom: 15px;
        margin-top: 5px;
        border: 1px solid #444;
        border-radius: 6px;
        padding: 5px;
      }
      .input::placeholder {
        color: #111;
      }
      .input:focus {
        box-shadow: 0px 0px 10px rgba(255, 255, 255, 1);
      }
      .input-content {
        width: 100%;
      }
      .label {
        color: #f5f5f5;
        font-size: 1em;
        align-self: flex-start;
      }
      .divider {
        border-bottom: 1px solid #ccc;
        margin-top: 20px;
        margin-bottom: 30px;
      }
      .btn {
        margin: 8px;
        width: 100%;
        height: 35px;
        border: none;
        border-radius: 6px;
        font-weight: bold;
        font-size: 1em;
        cursor: pointer;
        color: #fff;
        background: #999;
      }
      .btn:hover {
        color: #999;
        background: #fff;
        border: 1px solid #999;
      }
      ul {
        list-style: none;
      }
      li {
        padding-top: 10px;
        margin-left: 5px;
        color: #fff;
      }
      .bloch {
        display:inline-block;
        height: 10px;
        width: 10px;
      }
      .on {background: green;}
      .off {background: gray;}
      .rdy {background: darkblue;}
      .problem {background: gold;}
      .err {background: red;}
      .content {
        max-width: 420px;
        min-height: 440px;
        width: 100%;
        padding: 20px 15px;
        background: #1e1e1e;
        border: 1px solid #999;
        border-radius: 6px;
        flex-direction: column;
        align-items: center;
        justify-content: space-around;
        color: #fff;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <header class="title">
        <span>GERDAU</span>
        <h3>NR12</h3>
        <div class="divider"></div>
      </header>

      <div class="content">
        <h3>Sinais de Bloqueio</h3>
        <ul><li><span class='bloch err' id="EM_LEITO"></span>
          Emergência do Leito
        </li></ul>
        <ul><li><span class='bloch err' id="LEITO_PORTAS_BLK"></span>
          Portas do Leito Travadas
        </li></ul>
        <ul><li><span class='bloch err' id="EM_BAN"></span>
          Emergência da Banning
        </li></ul>
        <ul><li><span class='bloch err' id="PORTA_BAN_BLK"></span>
          Banning Porta Travada
        </li></ul>
      </div>

      <button onclick="showScreen('home.htm')" class="btn">Voltar</button>
    </div>
      
    <script>
      
      function showScreen(screen) {
        window.location.href = "/?screen=" + screen
      }

      setInterval(function ( ) {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
          if (this.readyState == 4 && this.status == 200) {
            var data = JSON.parse(this.responseText);

            console.log(this.responseText);

            if(data != null){
              for (const key in data) {
                if (Object.hasOwnProperty.call(data, key)) {
                  const value = data[key];
                  updateObject(key, value);
                }
              }
            }

          }
        };
        xhttp.open("GET", "/?data=true", true);
        xhttp.send();
      }, 1000) ;

      function updateObject(id, value){
        var obj = document.getElementById(id);
        if(obj != null){
            if(obj.classList.contains("bloch")){
              obj.className = value ? "bloch on" : "bloch err";
            }
        }
      }
      
    </script>
  </body>
</html>
